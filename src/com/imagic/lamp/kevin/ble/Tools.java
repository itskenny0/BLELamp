package com.imagic.lamp.kevin.ble;import android.app.Activity;import android.content.Context;import android.content.pm.PackageInfo;import android.content.pm.PackageManager;import android.graphics.Bitmap;import android.graphics.Bitmap.Config;import android.graphics.Canvas;import android.graphics.Paint;import android.graphics.PorterDuff.Mode;import android.graphics.PorterDuffXfermode;import android.graphics.Rect;import android.graphics.RectF;import android.util.DisplayMetrics;/** * 工具类 *  * @author Kevin.wu *  */public class Tools {	/**	 * 字节转十六进制 为相应的字符串显示	 * 	 * @param data	 * @return	 */	public static String byte2Hex(byte data[]) {		if (data != null && data.length > 0) {			StringBuilder sb = new StringBuilder(data.length);			for (byte tmp : data) {				sb.append(String.format("%02X ", tmp));			}			return sb.toString();		}		return "no data";	}	/**	 * 获取屏幕管理类	 * 	 * @return DisplayMetrics 屏幕管理对象	 */	public static DisplayMetrics getDisplayMetrics(Context context) {		DisplayMetrics displayMetrics = null;		if (displayMetrics == null) {			displayMetrics = new DisplayMetrics();		}		((Activity) context).getWindowManager().getDefaultDisplay()				.getMetrics(displayMetrics);		return displayMetrics;	}	/**	 * 图片圆角	 * 	 * @param bitmap	 * @param pixels	 * @return	 */	public static Bitmap toRoundCorner(Bitmap bitmap, int color) {		int jiange = 10;		Bitmap output = Bitmap.createBitmap(bitmap.getWidth(),				bitmap.getHeight(), Config.ARGB_8888);		Canvas canvas = new Canvas(output);		final Paint paint = new Paint();		final Rect rect = new Rect(jiange, jiange, bitmap.getWidth() - jiange,				bitmap.getHeight() - jiange);		final RectF rectF = new RectF(rect);		final float roundPx = bitmap.getHeight() / 2;		paint.setAntiAlias(true);		canvas.drawARGB(0, 0, 0, 0);		paint.setColor(color);		canvas.drawRoundRect(rectF, roundPx, roundPx, paint);		paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));		canvas.drawBitmap(bitmap.extractAlpha(), rect, rect, paint);		return output;	}	/**	 * 获取版本号	 * 	 * @return 当前应用的版本号	 */	public static String getVersion(Context context) {		try {			PackageManager manager = context.getPackageManager();			PackageInfo info = manager.getPackageInfo(context.getPackageName(),					0);			String version = info.versionName;			return "V" + version;		} catch (Exception e) {			e.printStackTrace();			return "no version name";		}	}}